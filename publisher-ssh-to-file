#!/bin/bash
#
# Publishes your current external IP address to a file on a remote server using a SSH connection.

set -e

# The host that is used for the SSH connection.
SSH_HOST=

# The user that is used for the SSH connection. When no user is set the
# connection is established without user.
SSH_USER=

# The file where the external IP is written to on the remote server. 
# Make sure that the file is writable by the SSH_USER.
FILE_PATH="/tmp/dynamic-ip"

######################################################
# Displays the available options and a usage example
# Arguments:
#   None
# Returns:
#   None
######################################################
print_help() {
  echo "Usage: ${0} [options...] hostname"
  echo
  echo "Options:"
  echo " -u, --user     The user that is used for the SSH connection."
  echo "                (Default: None)"
  echo " -f, --file     The file where your current external IP is written to on the remote server."
  echo "                You may need to use quotes if the file path contains a space."
  echo "                (Default: /tmp/dynamic-ip)"
}

# Reading the arguments
if [ -z "${1}" ]; then
  print_help
  exit 1
fi
SSH_HOST="${1}"
shift

while [[ $# > 1 ]]; do
  key="${1}"
  case $key in
    -u|--user)
      SSH_USER="${2}"
      shift
      ;;
    -f|--file)
      FILE_PATH="${2}"
      shift
      ;;
    *)
      print_help
      exit 1
      ;;
  esac
  shift
done

# Set constants to readonly after reading the arguments.
readonly SSH_USER
readonly SSH_HOST
readonly FILE_PATH

if [ -n "${SSH_USER}" ]; then
  host="${SSH_USER}@${SSH_HOST}"
else
  host="${SSH_HOST}"
fi

external_ip=$(dig +short myip.opendns.com @resolver1.opendns.com)
ssh "${host}" "echo ${external_ip} > ${FILE_PATH}"
